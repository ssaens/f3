{"version":3,"sources":["src/app/input-manager.js","src/gl-util.js","glsl/pbd.vert","glsl/pbd.frag","src/app/sim/index.js","src/app/ui-interface.js","src/app/renderer.js","src/app/index.js","src/main.js"],"names":["InputManager","mouse","x","y","keys","Set","handlers","on_click","bind","on_mouse","on_scroll","init","window","addEventListener","removeEventListener","event","handler","push","filter","h","e","offsetX","offsetY","forEach","Texture","gl","_tex","createTexture","args","texImage2D","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","bindTexture","Shader","type","source","id","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","deleteShader","Error","Program","name","vertSrc","fragSrc","inputs","vert","load","VERTEX_SHADER","frag","FRAGMENT_SHADER","pid","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attrs","uniforms","attr","getAttribLocation","console","warn","uniform","getUniformLocation","type_to_uniform_map","build_type_to_uniform_func_map","i","vertexAttribPointer","enableVertexAttribArray","use","getActiveUniform","unuse","useProgram","to_half","floatView","Float32Array","int32View","Int32Array","buffer","val","bits","m","module","exports","app","particle_radius","info","textures","framebuffer","framebuffers","next_id","particles","meta","pos","vel","pred_pos","temp","density_lambda","positions","generate_particles","d_x","d_y","num_particles","init_programs","init_textures","program","uniform1f","radius","is_mac","uniform1i","pos_buf","uniform1ui","particle_id_buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","set_attr","UNSIGNED_SHORT","o_x","o_y","w","num_w_particles","num_h_particles","offset_x","offset_y","j","RG16F","RG","HALF_FLOAT","map","activeTexture","TEXTURE0","dt","canvas","input","renderer","viewport","width","height","t","t_curr","uniform2f","drawArrays","POINTS","length","InfoBox","div","document","createElement","setAttribute","style","position","top","left","border","color","padding","fontSize","body","appendChild","_info","innerHTML","JSON","stringify","running","avg_fps","t_last","on_frame","on_resize","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","requestAnimationFrame","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","sim","step","render","clientHeight","clientWidth","PBDApplication","getElementById","initialized","paused","test","navigator","platform","info_box","sample_performance","on_mousemove","on","state","getContext","start","setTimeout","tLast","fps","toFixed","pause","main","run"],"mappings":"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","file":"main.e00f3392.js","sourceRoot":"..","sourcesContent":["export default class InputManager {\n  constructor() {\n    this.mouse = {\n      x: 0,\n      y: 0\n    };\n    this.keys = new Set();\n\n    this.handlers = {};\n    \n    this.on_click = this.on_click.bind(this);\n    this.on_mouse = this.on_mouse.bind(this);\n    this.on_scroll = this.on_scroll.bind(this);\n\n    this.init();\n  }\n\n  init() {\n    window.addEventListener('mousemove', this.on_mouse);\n  }\n\n  destroy() {\n    window.removeEventListener('mousemove', this.on_mouse);\n  }\n\n  on(event, handler) {\n    if (!this.handlers[event])\n      this.handlers[event] = [];\n\n    this.handlers[event].push(handler);    \n  }\n\n  remove(event, handler) {\n    if (!this.handlers[event])\n      return;\n\n    this.handlers[event] = this.handlers[event].filter(h => h !== handler);\n  }\n\n  on_click() {\n\n  }\n\n  on_mouse(e) {\n    this.mouse.x = e.offsetX;\n    this.mouse.y = e.offsetY;\n\n    this.handlers['mousemove'].forEach(h => h(this, e));\n  }\n\n  on_scroll() {\n\n  }\n}","export class Texture {\n  constructor(gl, ...args) {\n    this.gl = gl;\n    this._tex = gl.createTexture();\n    this.bind();\n    gl.texImage2D(gl.TEXTURE_2D, ...args);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  bind() {\n    const { gl, _tex } = this;\n    gl.bindTexture(gl.TEXTURE_2D, _tex);\n  }\n\n  unbind() {\n    const { gl } = this;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n}\n\nclass Shader {\n  static load(gl, type, source) {\n    const id = gl.createShader(type);\n    gl.shaderSource(id, source);\n    gl.compileShader(id);\n\n    if (gl.getShaderParameter(id, gl.COMPILE_STATUS))\n      return id;\n\n    const log = gl.getShaderInfoLog(id);\n    gl.deleteShader(id);\n    throw new Error(`An error occurred compiling a shader: ${log}`);\n  }\n}\n\nexport class Program {\n  constructor(gl, name, vertSrc, fragSrc, inputs) {\n    this.name = name;\n    this.vert = Shader.load(gl, gl.VERTEX_SHADER, vertSrc);\n    this.frag = Shader.load(gl, gl.FRAGMENT_SHADER, fragSrc);\n\n    const pid = gl.createProgram();\n    gl.attachShader(pid, this.vert);\n    gl.attachShader(pid, this.frag);\n    gl.linkProgram(pid);\n\n    if (!gl.getProgramParameter(pid, gl.LINK_STATUS))\n      throw new Error(`Unable to link the shader program ${name}: ${gl.getProgramInfoLog(pid)}`);\n\n    this.attrs = {};\n    this.uniforms = {};\n\n    inputs.attrs && inputs.attrs.forEach(attr => {\n      this.attrs[attr] = gl.getAttribLocation(pid, attr);\n      if (this.attrs[attr] === -1)\n        console.warn(`shader attribute ${attr} in program ${name} not found`);\n    });\n\n    inputs.uniforms && inputs.uniforms.forEach(uniform => {\n      this.uniforms[uniform] = gl.getUniformLocation(pid, uniform);\n      if (this.uniforms[uniform] === -1)\n        console.warn(`shader uniform ${uniform} in program ${name} not found`);\n    });\n\n    this.type_to_uniform_map = Program.build_type_to_uniform_func_map(gl);\n    this.gl = gl;\n    this.pid = pid;\n  }\n\n  set_attr(name, ...args) {\n    const i = this.attrs[name];\n    if (typeof i === 'undefined')\n      return false;\n\n    this.gl.vertexAttribPointer(i, ...args);\n    this.gl.enableVertexAttribArray(i);\n  }\n\n  set_uniform(name, ...args) {\n    this.use();\n\n    const { gl, type_to_uniform_map, uniforms } = this;\n    const i = uniforms[name];\n    if (typeof i === 'undefined')\n      return false;\n\n    const type = gl.getActiveUniform(this.pid, i);\n    type_to_uniform_map[type](...args);\n    this.unuse();\n  }\n\n  use() {\n    this.gl.useProgram(this.pid);\n  }\n\n  unuse() {\n    this.gl.useProgram(null);\n  }\n\n  static build_type_to_uniform_func_map(gl) {\n    // return {\n    //   [gl.FLOAT],\n    //   [gl.FLOAT_VEC2],\n    //   [gl.FLOAT_VEC3],\n    //   [gl.FLOAT_VEC4],\n    //   [gl.INT],\n    //   [gl.INT_VEC2],\n    //   [gl.INT_VEC3],\n    //   [gl.INT_VEC4],\n    //   [gl.BOOL],\n    //   [gl.BOOL_VEC2],\n    //   [gl.BOOL_VEC3],\n    //   [gl.BOOL_VEC4],\n    //   [gl.FLOAT_MAT2],\n    //   [gl.FLOAT_MAT3],\n    //   [gl.FLOAT_MAT4],\n    //   [gl.SAMPLER_2D],\n    //   [gl.SAMPLER_CUBE],\n    //   [gl.UNSIGNED_INT],\n    //   [gl.UNSIGNED_INT_VEC2],\n    //   [gl.UNSIGNED_INT_VEC3],\n    //   [gl.UNSIGNED_INT_VEC4],\n    //   [gl.FLOAT_MAT2x3],\n    //   [gl.FLOAT_MAT2x4],\n    //   [gl.FLOAT_MAT3x2],\n    //   [gl.FLOAT_MAT3x4],\n    //   [gl.FLOAT_MAT4x2],\n    //   [gl.FLOAT_MAT4x3],\n    //   [gl.SAMPLER_2D],\n    //   [gl.SAMPLER_3D],\n    //   [gl.SAMPLER_CUBE],\n    //   [gl.SAMPLER_2D_SHADOW],\n    //   [gl.SAMPLER_2D_ARRAY],\n    //   [gl.SAMPLER_2D_ARRAY_SHADOW],\n    //   [gl.SAMPLER_CUBE_SHADOW],\n    //   [gl.INT_SAMPLER_2D],\n    //   [gl.INT_SAMPLER_3D],\n    //   [gl.INT_SAMPLER_CUBE],\n    //   [gl.INT_SAMPLER_2D_ARRAY],\n    //   [gl.UNSIGNED_INT_SAMPLER_2D],\n    //   [gl.UNSIGNED_INT_SAMPLER_3D],\n    //   [gl.UNSIGNED_INT_SAMPLER_CUBE],\n    //   [gl.UNSIGNED_INT_SAMPLER_2D_ARRAY]\n    // }\n  }\n}\n\n/**\n * ref: http://stackoverflow.com/questions/32633585/how-do-you-convert-to-half-floats-in-javascript\n */\nexport const to_half = (function() {\n\n   var floatView = new Float32Array(1);\n   var int32View = new Int32Array(floatView.buffer);\n\n   /* This method is faster than the OpenEXR implementation (very often\n    * used, eg. in Ogre), with the additional benefit of rounding, inspired\n    * by James Tursa?s half-precision code. */\n   return function toHalf(val) {\n\n     floatView[0] = val;\n     var x = int32View[0];\n\n     var bits = (x >> 16) & 0x8000; /* Get the sign */\n     var m = (x >> 12) & 0x07ff; /* Keep one extra bit for rounding */\n     var e = (x >> 23) & 0xff; /* Using int is faster here */\n\n     /* If zero, or denormal, or exponent underflows too much for a denormal\n      * half, return signed zero. */\n     if (e < 103) {\n       return bits;\n     }\n\n     /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n     if (e > 142) {\n       bits |= 0x7c00;\n       /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n        * not Inf, so make sure we set one mantissa bit too. */\n       bits |= ((e == 255) ? 0 : 1) && (x & 0x007fffff);\n       return bits;\n     }\n\n     /* If exponent underflows but not too much, return a denormal */\n     if (e < 113) {\n       m |= 0x0800;\n       /* Extra rounding may overflow and set mantissa to 0 and exponent\n        * to 1, which is OK. */\n       bits |= (m >> (114 - e)) + ((m >> (113 - e)) & 1);\n       return bits;\n     }\n\n     bits |= ((e - 112) << 10) | (m >> 1);\n     /* Extra rounding. An overflow will set mantissa to 0 and increment\n      * the exponent, which is OK. */\n     bits += m & 1;\n     return bits;\n   };\n\n}());","module.exports=\"#version 300 es\\n#define GLSLIFY 1\\nlayout(location = 0) in float id;\\n\\nout vec3 pos;\\nflat out float _id;\\n\\nuniform uint num_particles;\\nuniform mediump float radius;\\nuniform sampler2D pos_buf;\\n\\nvoid main() {\\n  vec2 in_pos = texture(pos_buf, vec2(id / float(num_particles), 0)).xy;\\n  vec3 p = vec3(in_pos, 0.f);\\n  gl_Position = vec4(p, 1.f);\\n\\n  gl_PointSize = radius;\\n\\n  pos = p;\\n  _id = id;\\n}\\n\";","module.exports=\"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nin vec3 pos;\\nflat in float _id;\\n\\nout vec4 f_color;\\n\\nuniform mediump float radius;\\nuniform lowp float t;\\nuniform lowp vec2 mouse;\\n\\nconst vec3 lpos = vec3(0.f, 0.f, 1.f);\\nconst vec3 ambient = vec3(0.05f, 0.2f, 0.3f);\\nconst vec3 color = vec3(0.15f, 0.65f, 1.f);\\n\\nvoid main() {\\n  vec3 n;\\n  n.xy = 2.f * gl_PointCoord.st - vec2(1.f);\\n  n.y = -n.y;\\n  float r2 = length(n.xy);\\n  if (r2 > 1.f)\\n    discard;\\n\\n  n.z = sqrt(1.f - r2);\\n\\n  vec2 n_mouse = 2.f * vec2(mouse.x, -mouse.y) - vec2(1.f, -1.f);\\n\\n  vec3 lpos_curr = vec3(n_mouse, 1.f);\\n  float diffuse = clamp(dot(n, lpos_curr - pos), 0.f, 1.f);\\n\\n  f_color = vec4(ambient + diffuse * color.xyz, 1.f);\\n}\";","import { Program, Texture, to_half } from '~/src/gl-util';\nimport vertSrc from '~/glsl/pbd.vert';\nimport fragSrc from '~/glsl/pbd.frag';\n\nexport default (app, gl) => class PBDSimulation {\n  constructor(opts={}) {\n    this.particle_radius = 16;\n\n    this.info = {};\n    this.textures = {};\n    this.framebuffer = null;\n    this.framebuffers = [];\n\n    this.next_id = -1;\n    this.particles = [];\n    this.textures = {\n      meta: null,\n      pos: null,\n      vel: null,\n      pred_pos: null,\n      temp: null,\n      density_lambda: null\n    };\n\n    this.init();\n  }\n\n  init() {\n    const positions = this.generate_particles({ d_x: 30, d_y: 15 });\n\n    app.info = { ...app.info, particles: this.num_particles };\n\n    this.init_programs();\n    this.init_textures(positions);\n\n    this.program.use();\n    gl.uniform1f(this.program.uniforms.radius, app.is_mac ? this.particle_radius * 2 : this.particle_radius);\n    gl.uniform1i(this.program.uniforms.pos_buf, 0);\n    gl.uniform1ui(this.program.uniforms.num_particles, this.num_particles);\n\n    const particle_id_buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, particle_id_buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Uint16Array(this.particles), gl.STATIC_DRAW);\n    this.program.set_attr('id', 1, gl.UNSIGNED_SHORT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    this.program.unuse();\n  }\n\n  generate_particles({ o_x=0, o_y=0, w=1, h=1, d_x=10, d_y=10 }) {\n    const positions = [];\n    const num_w_particles = w * d_x;\n    const num_h_particles = h * d_y;\n    const offset_x = w / num_w_particles;\n    const offset_y = h / num_h_particles;\n\n    let x;\n    let y;\n    for (let i = -num_w_particles / 2; i < num_w_particles / 2; ++i) {\n      for (let j = -num_h_particles / 2; j < num_h_particles / 2; ++j) {\n        let cell = 0;\n        positions.push(o_x + i * offset_x, o_y + j * offset_y);\n        this.particles.push(++this.next_id);\n      }\n    }\n\n    return positions;\n  }\n\n  init_programs() {\n    this.program = new Program(gl, 'basic', vertSrc, fragSrc, {\n      attrs: ['id'],\n      uniforms: ['t', 'radius', 'mouse', 'pos_buf', 'num_particles']\n    });\n  }\n\n  init_textures(positions) {\n    const meta = null;\n\n    const pos = new Texture(gl, 0, \n                            gl.RG16F, \n                            this.num_particles, 1, \n                            0, \n                            gl.RG, gl.HALF_FLOAT, \n                            new Uint16Array(positions.map(to_half)));\n\n    this.textures.pos = pos;\n\n    gl.activeTexture(gl.TEXTURE0);\n    pos.bind();\n  }\n\n  step(dt) {\n\n  }\n\n  render() {\n    const { canvas, input, is_mac, renderer } = app;\n    gl.viewport(0, 0, canvas.width, canvas.height);\n\n    this.program.use();\n    gl.uniform1f(this.program.uniforms.t, renderer.t_curr);\n    if (is_mac)\n      gl.uniform2f(this.program.uniforms.mouse, 2 * input.mouse.x / canvas.width, 2 * input.mouse.y / canvas.height);\n    else\n      gl.uniform2f(this.program.uniforms.mouse, input.mouse.x / canvas.width, input.mouse.y / canvas.height);\n\n    gl.drawArrays(gl.POINTS, 0, this.num_particles);\n    this.program.unuse();\n  }\n\n  get num_particles() {\n    return this.particles.length;\n  }\n};\n","export default class InfoBox {\n  constructor() {\n    const div = document.createElement('div');\n    div.setAttribute('id', 'info-box');\n\n    div.style.position = 'fixed';\n    div.style.top = 0;\n    div.style.left = 0;\n    div.style.border = '1px solid white';\n    div.style.color = 'white';\n    div.style.padding = '0.4em';\n    div.style.fontSize = '0.8em';\n\n    document.body.appendChild(div);\n\n    this.div = div;\n    this._info = {};\n  }\n\n  get info() {\n    return this._info;\n  }\n\n  set info(i) {\n    this._info = i;\n    this.div.innerHTML = `<pre>${JSON.stringify(i, null, 2)}</pre>`;\n  }\n}\n","/**\n * Render Loop Manager\n */\nexport default (app, gl) => class Renderer { \n  constructor() {\n    this.running = false;\n    this.avg_fps = 0;\n    this.t_curr = 0;\n    this.t_last = 0;\n\n    this.on_frame = this.on_frame.bind(this);\n    this.on_resize = this.on_resize.bind(this);\n  }\n\n  init() {\n    gl.clearColor(0.2, 0.2, 0.2, 1.0);\n    gl.clearDepth(1.0);\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n\n    window.addEventListener('resize', this.on_resize);\n  }\n\n  start() {\n    this.running = true;\n    window.requestAnimationFrame(this.on_frame);\n  }\n\n  on_frame(t) {\n    if (!this.running)\n      return;\n\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    this.t_last = this.t_curr;\n    this.t_curr = t;\n    const dt = t - this.t_last;\n\n    this.avg_fps = (1000 / dt + this.avg_fps) * 0.5;\n\n    app.sim.step(dt);\n    app.sim.render();\n\n    window.requestAnimationFrame(this.on_frame);\n  }\n\n  on_resize() {\n    const { canvas, is_mac } = app;\n    if (is_mac) {\n      canvas.height = 2 * canvas.clientHeight;\n      canvas.width = 2 * canvas.clientWidth;\n    } else {\n      canvas.height = canvas.clientHeight;\n      canvas.width = canvas.clientWidth;\n    }\n  }\n\n  pause() {\n    this.running = false;\n  }\n\n  destroy() {\n\n  }\n};\n","import InputManager from './input-manager';\nimport PBDSimulation from './sim';\nimport InfoBox from './ui-interface';\nimport Renderer from './renderer';\n\nexport default class PBDApplication {\n  constructor(canvas) {\n    this.canvas = document.getElementById(canvas);\n    if (!this.canvas)\n      throw new Error('canvas element not found');\n\n    this.initialized = false;\n    this.paused = true;\n    this.is_mac = /mac/i.test(window.navigator.platform);\n\n    this.gl = null;\n    this.sim = null;\n    this.renderer = null;\n\n    this.input = new InputManager();\n    this.info_box = new InfoBox();\n\n    this.sample_performance = this.sample_performance.bind(this);\n    this.on_mousemove = this.on_mousemove.bind(this);\n\n    this.input.on('mousemove', this.on_mousemove);\n  }\n\n  init() {\n    this.info_box.info = { state: 'initializing...' };\n\n    const gl = this.canvas.getContext(\"webgl2\");\n    if (!gl)\n      throw new Error('webgl context could not be created');\n\n    this.gl = gl;\n    \n    this.sim = new (PBDSimulation(this, gl))();\n    this.renderer = new (Renderer(this, gl))();\n\n    this.renderer.init();\n    this.renderer.on_resize();\n\n    this.initialized = true;\n    this.info = { ...this.info, state: 'initialized' };\n  }\n\n  on_mousemove(input) {\n    this.info = { ...this.info, mouse: `${input.mouse.x}, ${input.mouse.y}` };\n  }\n\n  run() {\n    if (!this.initialized)\n      throw new Error('application has not been initialized');\n\n    this.paused = false;\n    this.info = { ...this.info, state: 'running' };\n\n    this.renderer.start();\n\n    window.setTimeout(this.sample_performance, 1000);\n  }\n\n  sample_performance() {\n    if (!this.renderer.running)\n      return;\n\n    const dt = this.t - this.tLast;\n    this.info = { ...this.info, fps: `${this.renderer.avg_fps.toFixed(2)} fps` };\n\n    window.setTimeout(this.sample_performance, 1000);\n  }\n\n  pause() {\n    this.info = { \n      ...this.info,\n      state: 'paused'\n    };\n    delete this.info.fps;\n    this.renderer.pause();\n  }\n\n  get info() {\n    return this.info_box.info;\n  }\n\n  set info(info) {\n    this.info_box.info = info;\n  }\n}","import PBDApplication from './app';\n\nfunction main() {\n  const app = new PBDApplication('view');\n\n  app.init();\n  app.run();\n}\n\nmain();\n"]}